{
  "pluginType": "API",
  "pluginId": "graphql-plugin",
  "unpublishedAction": {
    "name": "getInventoryTransactionsRaw",
    "datasource": {
      "name": "libre.graphql",
      "pluginId": "graphql-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "id": "libre.graphql",
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "Unit History",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "headers": [
        {
          "key": "content-type",
          "value": "application/json"
        }
      ],
      "autoGeneratedHeaders": [],
      "encodeParamsToggle": true,
      "queryParameters": [],
      "body": "query ($serialNumbers: [ExtMaterialSubLotRef], $ownerId: ID!) {\n  getInventoryTransactionsRaw (\n\t\tfilter: {\n\t    materialSubLot: $serialNumbers,\n\t\t\towner: { id: $ownerId },\n\t\t\tfilterReversed: true\n\t  }\n\t) {\n\t\tmaterialSubLot { code }\n    material { code }\n    status { code }\n    storageLocation { name }\n    carrier { code }\n    jobResponse { \n\t\t\tid\n\t\t\tjobOrder {\n      \tsegmentRequirement {\n        \toperationsRequest {\n            id\n            code\n          }\n        }\n    \t}\n\t\t}\n    shipment { id }\n    shipmentItem { id }\n    owner { companyCode }\n    comment\n    reason\n    materialUse\n    timestamp\n\t\tquantity\n  }\n}",
      "httpMethod": "POST",
      "selfReferencingDataPaths": [],
      "pluginSpecifiedTemplates": [
        {
          "value": true
        },
        {
          "value": "{{ this.params.variables }}"
        },
        {
          "value": {}
        }
      ],
      "formData": {
        "apiContentType": "application/json"
      }
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "pluginSpecifiedTemplates[1].value"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      " this.params.variables "
    ],
    "userSetOnLoad": true,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "Unit History_getInventoryTransactionsRaw",
  "deleted": false,
  "gitSyncId": "641ce7a6ede2b802c99eddf3_641ce7a7ede2b802c99ee01f"
}